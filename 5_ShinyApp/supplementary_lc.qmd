---
title: "SUPPLEMENT"
format:
  docx:
    reference-doc: reference-doc.docx
    fig-cap-location: top
execute:
  echo: false
crossref:
  fig-title: '**Figure S**'
  fig-labels: arabic
  title-delim: "**.**"
lof: TRUE
---

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE}
library(dplyr)
library(tidyr)
library(readr)
library(here)
library(flextable)
library(survival)
library(ggplot2)
library(ggfortify)
library(survminer)
library(ggh4x)
library(officer)
library(knitr)
library(officedown)

knitr::opts_chunk$set(
  echo       = FALSE,
  message    = FALSE,
  warning    = FALSE
)
knitr::opts_chunk$set(echo = FALSE, fig.cap = TRUE, tab.cap.pre = "Table ", tab.cap.sep = ": ")
num_tab <- 1
num_fig <- 1
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE}
source(here("functions_lc.R"))
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE}
source(here("prep_data_lc.R"))
```

The effectiveness of COVID-19 vaccines to prevent long COVID symptoms: staggered cohort analyses of data from Spain, Estonia, and the UK.

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n\n\\pagebreak\n")
cat("\n") 
cat("##",paste0("**Figure S", num_fig, ": Details of the country-specific vaccination rollout and study-specific enrolment periods and definition of priority groups for vaccination.**"))
cat("\n")
include_graphics(here("figures", "figS1.png"))
num_fig<- num_fig + 1
cat("\n")
cat("*Priority groups are country-specific and originally defined for the planning of the respective national vaccination rollout strategy by the respective governmental agency")
cat("\n") 
cat("**Essential workers, frontline healthcare workers, social care workers could not be identified from the data. Therefore, people were included based on their age and records of conditions relevant for “high risk” and “at risk” categories for priorisation. ") 
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n\n\\pagebreak\n")
cat("\n") 
cat("##",paste0("**Table S", num_tab, ": Details of the country-specific vaccination rollout. Country-specific lists of conditions characterising people as “clinically extremely vulnerable/high risk” or “at risk” for severe COVID-19.**"))
cat("\n")
include_graphics(here("figures", "figS1.png"))
num_tab <- num_tab + 1
cat("\n")
cat("Sources for overview table: ")
cat("\n") 
cat("[1] NHS Digital. COVID-19 – high risk shielded patient list identification methodology - Rule logic. Update from 8 December 2021 --- General Practice Specification and Extraction Service (GPSES), NHS Digital: “Business Rules for Patient-level Data Extracts 2019/20 COVID19 At-risk patients”, Version: 1.1, Version Date: 17/03/2020 ") 
cat("\n")
cat("[2] https://beteve.cat/societat/vacunacio-grups-risc-malalties-greus-simultaniament-franja-70-79-anys/ ")
cat("\n")
cat("[3] https://vaktsineeri.ee/wp-content/uploads/2021/06/covid-19_vaktsineerimise_plaan_19.01_0.pdf ")
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n\n\\pagebreak\n")
cat("\n") 
cat("##",paste0("**Figure S", num_fig, ": Illustration of follow-up** for staggered cohort study."))
cat("\n")
include_graphics(here("figures", "Follow-up_Mode.jpg"))
num_fig<- num_fig + 1
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n\n\\pagebreak\n")
cat("\n") 
cat("##",paste0("**Figure S", num_fig, ": Study Design using UK vaccination rollout (CPRD AURUM and GOLD) as illustrative example.**"))
cat("\n")
include_graphics(here("figures", "fig2.png"))
num_fig<- num_fig + 1
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
# cat("\n") 
# cat("##",paste0("**Figure S", num_fig, ": Study Inclusion Flowchart CPRD AURUM.**"))
# include_graphics(here("figures", "Slide1.PNG"))
# num_fig<- num_fig + 1
# cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n") 
cat("##",paste0("**Figure S", num_fig, ": Study Inclusion Flowchart CPRD GOLD.**"))
cat("\n") 
include_graphics(here("figures", "Slide2.PNG"))
num_fig<- num_fig + 1
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n") 
cat("##",paste0("**Figure S", num_fig, ": Study Inclusion Flowchart CPRD SIDIAP.**"))
cat("\n") 
include_graphics(here("figures", "Slide3.PNG"))
num_fig<- num_fig + 1
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("##",paste0("**Figure S", num_fig, ": Study Inclusion Flowchart CORIVA.**"))
cat("\n") 
include_graphics(here("figures", "Slide4.PNG"))
num_fig<- num_fig + 1
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE, results='asis'}
# Table One VE ----
captions_ve <- captions %>% filter(!cve)
for (ii in 1:nrow(captions_ve)) {
  
  # Manuscript
  if (captions_ve$cdm_name[ii] == "AURUM" & captions_ve$exposure_name[ii] == "any vaccine vaccinated") {
    cat("\n") 
    cat("##",paste0("**Table S", num_tab, ": ", captions_ve$caption_u_1[ii], "**", captions_ve$caption_2[ii]))
    
    tbl_char_un <- table_characteristics %>%
      filter(exposure_name == captions_ve$exposure_name[ii]) %>%
      filter(comparator_name == captions_ve$comparator_name[ii]) %>%
      filter(cdm_name == captions_ve$cdm_name[ii])

    flextable_to_rmd(
      getTableOne(tbl_char_un, captions_ve$cve[ii])
    )
    # cat("UV = unvaccinated, V = vaccinated, ASMD = absolute standardized mean difference")
    cat("ASMD = Absolute standardized mean difference, COPD = Chronic obstructive pulmonary disease,
         GERD = Gastroesophageal reflux disease")
    
    # Add a page break
    cat("\n\n\\pagebreak\n")
    num_tab <- num_tab + 1


  } else {

    cat("\n") 
    cat("##",paste0("**Table S", num_tab, ": ", captions_ve$caption_w_1[ii], "**", captions_ve$caption_2[ii]))
    tbl_char <- table_characteristics_weighted %>%
      filter(exposure_name == captions_ve$exposure_name[ii]) %>%
      filter(comparator_name == captions_ve$comparator_name[ii]) %>%
      filter(cdm_name == captions_ve$cdm_name[ii])

    flextable_to_rmd(
      getTableOne(tbl_char, captions_ve$cve[ii])
    )
    cat("ASMD = Absolute standardized mean difference, COPD = Chronic obstructive pulmonary disease,
         GERD = Gastroesophageal reflux disease")
    
    cat("\n\n\\pagebreak\n")
    num_tab <- num_tab + 1

    cat("\n") 
    cat("##",paste0("**Table S", num_tab, ": ", captions_ve$caption_u_1[ii], "**", captions_ve$caption_2[ii]))
    tbl_char_un <- table_characteristics %>%
      filter(exposure_name == captions_ve$exposure_name[ii]) %>%
      filter(comparator_name == captions_ve$comparator_name[ii]) %>%
      filter(cdm_name == captions_ve$cdm_name[ii])

    flextable_to_rmd(
      getTableOne(tbl_char_un, captions_ve$cve[ii])
        )
   cat("ASMD = Absolute standardized mean difference, COPD = Chronic obstructive pulmonary disease,
         GERD = Gastroesophageal reflux disease")

    cat("\n\n\\pagebreak\n")
    num_tab <- num_tab + 1
  }
}
```

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE, results='asis'}
# Table One CVE ----
captions_cve <- captions %>% filter(cve)
for (ii in 1:nrow(captions_cve)) {

  if (captions_cve$cdm_name[ii] == "AURUM" & captions_cve$exposure_name[ii] == "any vaccine vaccinated") {
    tbl_char_un <- table_characteristics %>%
      filter(exposure_name == captions_cve$exposure_name[ii]) %>%
      filter(comparator_name == captions_cve$comparator_name[ii]) %>%
      filter(cdm_name == captions_cve$cdm_name[ii])

    cat("\n") 
    cat("##", paste0("**Table S", num_tab, ": ", captions_cve$caption_u_1[ii], "**", captions_cve$caption_2[ii]))
    flextable_to_rmd(
      getTableOne(tbl_char_un, captions_cve$cve[ii])
    )
    cat("ASMD = Absolute standardized mean difference, COPD = Chronic obstructive pulmonary disease,
         GERD = Gastroesophageal reflux disease")

    # Add a page break
    cat("\n\n\\pagebreak\n")
    num_tab <- num_tab + 1


  } else {

    tbl_char <- table_characteristics_weighted %>%
      filter(exposure_name == captions_cve$exposure_name[ii]) %>%
      filter(comparator_name == captions_cve$comparator_name[ii]) %>%
      filter(cdm_name == captions_cve$cdm_name[ii])

    cat("\n") 
    cat("##", paste0("**Table S", num_tab, ": ", captions_cve$caption_w_1[ii], "**", captions_cve$caption_2[ii]))
    flextable_to_rmd(
      getTableOne(tbl_char, captions_cve$cve[ii])
    )
    cat("ASMD = Absolute standardized mean difference, COPD = Chronic obstructive pulmonary disease,
         GERD = Gastroesophageal reflux disease")

    cat("\n\n\\pagebreak\n")
    num_tab <- num_tab + 1

    tbl_char_un <- table_characteristics %>%
      filter(exposure_name == captions_cve$exposure_name[ii]) %>%
      filter(comparator_name == captions_cve$comparator_name[ii]) %>%
      filter(cdm_name == captions_cve$cdm_name[ii])

    cat("\n") 
    cat("##", paste0("**Table S", num_tab, ": ", captions_cve$caption_u_1[ii], "**", captions_cve$caption_2[ii]))
    flextable_to_rmd(
      getTableOne(tbl_char_un, captions_cve$cve[ii])
        )
    cat("ASMD = Absolute standardized mean difference, COPD = Chronic obstructive pulmonary disease,
         GERD = Gastroesophageal reflux disease")
    

    cat("\n\n\\pagebreak\n")
    num_tab <- num_tab + 1
  }
}
```

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE, results='asis'}
# Table Outcome ----

for (ii in 2:nrow(captions_outcome)) {
if (captions_outcome$cve[ii]) {
  tbl_outcome <- estimates %>%
    filter(outcome_name %in% c(captions_outcome$outcome_name[ii], "next_covid")) %>%
    filter(exposure_name == captions_outcome$exposure_name[ii]) %>%
    filter(comparator_name == captions_outcome$comparator_name[ii]) %>%
    filter(censoring_method == captions_outcome$censoring_method[ii]) %>%
    mutate(study = paste0("Cohort ", study)) %>%
    filter(cdm_name != "CORIVA") %>%
    select(-c("coef","hr","se_coef","z","p", "lower_hr", "upper_hr", "model", "adjustment", "censoring_method", "covariates", "comparison_id", "outcome_group", "exposure_cohort_id", "exposure_name",          "comparator_cohort_id", "comparator_name",     "skip", "variable")) %>%
    mutate(study = paste0("Cohort", study),
           outcome_name = if_else(
             outcome_name == "next_covid",
             "C",
             "LC"
           )) %>%
    distinct() %>%
    pivot_wider(names_from = c(outcome_name), 
                values_from = c(number_events_exposure, number_events_comparator)) %>%
    mutate(
      number_events_exposure_LC = nice_perc(number_events_exposure_LC, number_events_exposure_C, dec = 2),
      number_events_comparator_LC = nice_perc(number_events_comparator_LC, number_events_comparator_C, dec = 2),
      number_events_exposure_C = nice(number_events_exposure_C),
      number_events_comparator_C = nice(number_events_comparator_C)
    ) %>%
     select("Database name" = "cdm_name",
         "Staggered cohort" = "study",
         "BNT162b2_Individuals (N)" = "number_exposures",
         "BNT162b2_COVID-19 (N)" = "number_events_exposure_C",
         "BNT162b2_LongCOVID-19 (N (%))" = "number_events_exposure_LC",
         "ChAdOx1_Individuals (N)" = "number_comparators",
         "ChAdOx1_COVID-19 (N)" = "number_events_comparator_C",
         "ChAdOx1_LongCOVID-19 (N (%))" = "number_events_comparator_LC")
} else {
  tbl_outcome <- estimates %>%
  filter(outcome_name %in% c(captions_outcome$outcome_name[ii], "next_covid")) %>%
  filter(exposure_name == captions_outcome$exposure_name[ii]) %>%
  filter(comparator_name == captions_outcome$comparator_name[ii]) %>%
  filter(censoring_method == captions_outcome$censoring_method[ii]) %>%
    select(-c("coef","hr","se_coef","z","p", "lower_hr", "upper_hr", "model", "adjustment", "censoring_method", "covariates", "comparison_id", "outcome_group", "exposure_cohort_id", "exposure_name",          "comparator_cohort_id", "comparator_name",     "skip", "variable")) %>%
  mutate(study = paste0("Cohort", study),
         outcome_name = if_else(
           outcome_name == "next_covid",
           "C",
           "LC"
         )) %>%
    distinct() %>%
    pivot_wider(names_from = c(outcome_name), 
                values_from = c(number_events_exposure, number_events_comparator)) %>%
    mutate(
      number_events_exposure_LC = nice_perc(number_events_exposure_LC, number_events_exposure_C, dec = 2),
      number_events_comparator_LC = nice_perc(number_events_comparator_LC, number_events_comparator_C, dec = 2),
      number_events_exposure_C = nice(number_events_exposure_C),
      number_events_comparator_C = nice(number_events_comparator_C)
    ) %>%
  select("Database name" = "cdm_name",
         "Staggered cohort" = "study",
         "Vaccinated_Individuals (N)" = "number_exposures",
         "Vaccinated_COVID-19 (N)" = "number_events_exposure_C",
         "Vaccinated_LongCOVID-19 (N (%))" = "number_events_exposure_LC",
         "Unvaccinated_Individuals (N)" = "number_comparators",
         "Unvaccinated_COVID-19 (N)" = "number_events_comparator_C",
         "Unvaccinated_LongCOVID-19 (N (%))" = "number_events_comparator_LC") 
}

  
  

if(captions_outcome$exposure_name[ii] == "astrazeneca vaccinated") {
  tbl_outcome <- tbl_outcome %>%
    filter(`Database name` != "CORIVA") %>%
    filter(!(`Database name` == "SIDIAP" & `Staggered cohort` == "Cohort1"))
}

  if(captions_outcome$outcome_name[ii] %in% c("longcovid_post_acute_covid19_90_365", "next_post_acute_covid19")) {
    tbl_outcome <- tbl_outcome %>%
    filter(`Database name` != "CORIVA") %>%
      filter(`Database name` != "GOLD")
    if (captions_outcome$cve[ii]) {
      tbl_outcome <- NULL
    }
  }


  if (!is.null(tbl_outcome)) {
    cat("\n") 
    cat("##", paste0("**Table S", num_tab, ": ", captions_outcome$caption_1[ii], "**", captions_outcome$caption_2[ii]))
  flextable_to_rmd(
    tbl_outcome %>%
      as_grouped_data(groups = c("Database name")) %>%
      flextable() %>%
      separate_header() %>%
      hline(border = border) %>%
      set_table_properties(width = 1, layout = "autofit") %>%
      bold(part = "header") %>%
      bold(j = 1, part = "body") %>%
      bg(j = seq(2, ncol(tbl_outcome), 2), bg = "#ededed") %>%
      fontsize(size = 9, part = "header") %>%
      fontsize(size = 8, part = "body")  %>%
      padding(padding = 1, part = "all") %>%
      align(align = "center", part = "header") %>%
      align(align = "left", part = "body")
  )

cat("\n\n\\pagebreak\n")
num_tab <- num_tab + 1

}

}
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n\n\\pagebreak\n")
cat("\n") 
cat("##",paste0("**Table S", num_tab, ": Follow-up time, censoring proportion and reason for censoring** in vaccine effectiveness analysis for any long COVID symptoms between 90 and 365 days after SARS-CoV-2 across cohorts and databases, stratified by vaccine brand. Follow-up ends at first vaccine dose after index date."))
cat("\n")
num_tab <- num_tab + 1
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n\n\\pagebreak\n")
cat("\n") 
cat("##",paste0("**Table S", num_tab, ": Vaccine effectiveness against any long COVID symptoms between 90 and 365 days and COVID-19** across cohorts and databases. Exposure is any COVID-19 vaccine."))
cat("\n")
num_tab <- num_tab + 1
cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
# cat("\n\n\\pagebreak\n")
# cat("\n") 
# cat("##",paste0("**Figure S", num_fig, ": Absolute Standardised Mean Diferences (ASMD)** across cohorts in CPRD AURUM database."))
# cat("\n")
# include_graphics(here("figures", "Figure1_AURUM.png"))
# num_fig <- num_fig + 1
# cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
# cat("\n\n\\pagebreak\n")
# cat("\n") 
# cat("##",paste0("**Figure S", num_fig, ": Absolute Standardised Mean Diferences (ASMD)** across cohorts in CPRD Gold database."))
# cat("\n")
# include_graphics(here("figures", "Figure1_GOLD.png"))
# num_fig <- num_fig + 1
# cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
# cat("\n\n\\pagebreak\n")
# cat("\n") 
# cat("##",paste0("**Figure S", num_fig, ": Absolute Standardised Mean Diferences (ASMD)** across cohorts in SIDIAP database."))
# cat("\n")
# include_graphics(here("figures", "Figure1_SIDIAP.png"))
# num_fig <- num_fig + 1
# cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
# cat("\n\n\\pagebreak\n")
# cat("\n") 
# cat("##",paste0("**Figure S", num_fig, ": Absolute Standardised Mean Diferences (ASMD)** across cohorts in CORIVA database."))
# cat("\n")
# include_graphics(here("figures", "Figure1_CORIVA.png"))
# num_fig <- num_fig + 1
# cat("\n\n\\pagebreak\n")
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
# #| label: figure_ve
# #| fig-align: center
# #| fig-width: 10
# #| fig-asp: 0.62
# #| out-width: "90%"
# #| fig-dpi: 500
# #| fig.retina: 2
# 
# # FOREST PLOT: VACCINE EFFECTIVENESS
# for (ii in 2:nrow(forest_plot_caption)) {
#   data <- estimates_plot %>%
#       filter(censoring_method == forest_plot_caption$censoring[ii]) %>%
#       filter(outcome_name == forest_plot_caption$outcome_name[ii]) %>%
#       filter(adjustment == "calibrated") %>%
#       filter(comparison %in% c("any (VE)", "pfizer (VE)", "astrazeneca (VE)")) %>%
#       mutate(comparison = case_when(
#         comparison == "any (VE)" ~ "Any vaccine",
#         comparison == "pfizer (VE)" ~ "BNT162b2",
#         comparison == "astrazeneca (VE)" ~ "ChAdOx1"
#       )) %>%
#       mutate(
#         comparison = factor(comparison, levels = c("Any vaccine", "BNT162b2", "ChAdOx1"))
#       ) %>%
#       mutate(
#         cdm_name = factor(cdm_name, levels = c("AURUM", "GOLD", "SIDIAP", "CORIVA"))
#       ) %>%
#       mutate(adjustment_y = case_when(
#         study == "Study 1" ~ 5,
#         study == "Study 2" ~ 4,
#         study == "Study 3" ~ 3,
#         study == "Study 4" ~ 2,
#         study == "Meta Analysis" ~ 0.5
#       )) %>%
#       mutate(meta = if_else(study == "Meta Analysis", "meta", "no meta")) 
#   
#   if (forest_plot_caption$outcome_name[ii] == "next_post_acute_covid19" | forest_plot_caption$outcome_name[ii] == "longcovid_post_acute_covid19_90_365") {
#     data <- data %>%
#       filter(cdm_name != "CORIVA") %>%
#       filter(cdm_name != "GOLD")
#   }
#   
#   
#   cat("\n")
#   cat("##",paste0("**Figure S", num_fig, ": ", forest_plot_caption$caption_1[ii], "**", forest_plot_caption$caption_2[ii]))
# print(data %>%
#       ggplot(aes(y = adjustment_y, colour = study, fill = study)) +
#       geom_point(aes(x=hr), size=1) +
#       geom_linerange(aes(xmin=lower_hr, xmax=upper_hr)) +
#       facet_grid(cdm_name ~ comparison) +
#       # labs(title = outcome) +
#       scale_y_continuous(limits = c(0, 5.5), breaks = c(0.5, 2, 3, 4, 5), labels = c("meta-analysis", "cohort 4", "cohort 3", "cohort 2", "cohort 1")) +
#       scale_x_continuous(limits = c(0, 2), breaks = seq(0, 2, by = 0.5)) +
#       geom_vline(xintercept = 1) +
#       geom_hline(yintercept = 1.25, linetype="dashed", color = "black") +
#       theme(
#         axis.title.y = element_blank(),
#         legend.title = element_blank()
#       ))
# num_fig <- num_fig + 1
# cat("\n\n\\pagebreak\n")
# }
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
#| label: figure_ve
#| fig-align: center
#| fig-width: 10
#| fig-asp: 0.62
#| out-width: "90%"
#| fig-dpi: 500
#| fig.retina: 2
list_figures <- list.files(here::here("figures"), ".png")
list_figures_ve <- list_figures[grepl("Figure2", list_figures)]

# FOREST PLOT: VACCINE EFFECTIVENESS
for (ii in 2:nrow(forest_plot_caption)) {
  
  path <- here::here("figures", list_figures_ve[grepl(forest_plot_caption$outcome_name[ii], list_figures_ve) & 
                            grepl(forest_plot_caption$censoring_filter[ii], list_figures_ve)])
  
  cat("\n")
  cat("##",paste0("**Figure S", num_fig, ": ", forest_plot_caption$caption_1[ii], "**", forest_plot_caption$caption_2[ii]))
  cat("\n")
cat(paste0("![](", path, ")"), "\n")
num_fig <- num_fig + 1
cat("\n\n\\pagebreak\n")
}
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
#| label: figure_cve
#| fig-align: center
#| fig-width: 7
#| fig-asp: 0.62
#| out-width: "90%"
#| fig-dpi: 500
#| fig.retina: 2

list_figures <- list.files(here::here("figures"), ".png")
list_figures_cve <- list_figures[grepl("Figure3", list_figures)]

# FOREST PLOT: COMPARATIVE EFFECTIVENESS
for (ii in 2:nrow(forest_plot_caption_cve)) {
  path <- here::here("figures", list_figures_cve[grepl(forest_plot_caption_cve$outcome_name[ii], list_figures_cve) & 
                            grepl(forest_plot_caption_cve$censoring_filter[ii], list_figures_cve)])
  
  cat("\n")
  cat("##", paste0("**Figure S", num_fig, ": ", forest_plot_caption_cve$caption_1[ii], "**", forest_plot_caption_cve$caption_2[ii]))
  cat("\n")
  
cat(paste0("![](", path, ")"), "\n")

num_fig <- num_fig + 1
cat("\n\n\\pagebreak\n")
}
```

```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE, results='asis'}
#| label: figure_km
#| fig-align: center
#| fig-width: 10
#| fig-asp: 0.62
#| out-width: "90%"
#| fig-dpi: 500
#| fig.retina: 2

# KAPLAN MEIER
for (ii in 1:nrow(captions_km)) {
  data <- survival_plot %>%
    filter(censoring_method == captions_km$censoring_method[ii]) %>%
    filter(outcome_name == captions_km$outcome_name[ii]) %>%
    filter(exposure_name == captions_km$exposure_name[ii]) %>%
    filter(comparator_name == captions_km$comparator_name[ii]) 

  if (captions_km$cve[ii]) {
    if (captions_km$comparator_name[ii] == "astrazeneca vaccinated") {
      data <- data %>%
        mutate(cohort = ifelse(grepl("astrazeneca vaccinated", .data$group), "ChAdOx1", "BNT162b2")) %>%
        filter(cdm_name %in% c("GOLD", "AURUM"))
      
    } else if (captions_km$comparator_name[ii] == "moderna vaccinated") {
      data <- data %>%
        mutate(cohort = ifelse(grepl("moderna vaccinated", .data$group), "mRNA-1273", "BNT162b2")) %>%
        filter(cdm_name %in% c("CORIVA", "UiO"))
      
    }
    
  } else {
    data <- data %>%
      mutate(cohort = ifelse(grepl("unvaccinated", .data$group), "Unvaccinated", "Vaccinated"))
  }
  
  if(captions_outcome$exposure_name[ii] == "astrazeneca vaccinated") {
  data <- data %>%
    filter(! cdm_name %in% c("CORIVA", "UiO")) %>%
    filter(!(cdm_name == "SIDIAP" & study == "Cohort 1"))
  }

  if(captions_km$outcome_name[ii] %in% c("longcovid_post_acute_covid19_90_365", "next_post_acute_covid19")) {
    data <- data %>%
    filter(cdm_name != "CORIVA") %>%
      filter(cdm_name != "UiO") %>%
      filter(cdm_name != "GOLD")
    if (captions_km$cve[ii]) {
      if (nrow(data) > 1) {
        data <- data[1,]
      }
    }
  }

  if (nrow(data) > 2) {
  fit <- survfit(Surv(time, status) ~ cohort + cdm_name + study, data = data, weights = weight)

  surv_data <- surv_summary(fit, data) %>%
    mutate(cdm_name = factor(cdm_name, level = c("AURUM","GOLD", "SIDIAP", "CORIVA")))

  ylim_lower <- surv_data %>%
    group_by(cdm_name) %>%
    select(surv) %>%
    filter(surv == min(surv)) %>%
    distinct()

  y <- list()

  for (num in 1:length(unique(surv_data$cdm_name))) {
    y[[num]] <- eval(parse(text =
                           paste0('cdm_name =="', ylim_lower$cdm_name[num], '"~ scale_y_continuous(limits = c(', ylim_lower$surv[num], ', 1), breaks = c(', paste(matlab::linspace(ylim_lower$surv[num],1,4), collapse= ", "), '), labels = c(', paste(sprintf(matlab::linspace(ylim_lower$surv[num],1,4), fmt = '%#.4f'), collapse = ","), '))')))
    cat("\n")

  }
  ggsurv <- ggsurvplot(fit,
                       data = data,
                       censor = FALSE,
                       color = "cohort",
                       palette = c("#8fb996", "#457b9d"),
                       conf.int = TRUE)

  cat("##", paste0("**Figure S", num_fig, ": ", captions_km$caption_1[ii], "**", captions_km$caption_2[ii]))
  cat("\n") 
  print(ggsurv$plot +
          theme_gray() +
          theme(legend.position = "right",
                legend.title = element_blank())+
          facet_grid(cdm_name ~ study, scales = "free_y") +
          facetted_pos_scales(y = y))

num_fig <- num_fig + 1

cat("\n\n\\pagebreak\n")
  }
}
```

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE, results='asis'}

cat("\n") 
cat("##",paste0("**Table S", num_tab, ": Fine-Gray and Cox estimates** for any COVID-19 vaccine effectiveness across databases and cohorts."))
cat("\n") 
estimates_table <- readFiles("fg_vs_cox") %>%
  select(cdm_name, comparison_name, finegray, cox, -outcome_name) %>%
  mutate(comparison_name = paste0("Cohort ", substr(comparison_name, 2,2)))

estimates_table <- lapply(unique(estimates_table$cdm_name),
                          function(x){
                            tibble(cdm_name = x, comparison_name = NA, finegray = NA, cox = NA) %>%
                              union_all(
                                estimates_table %>%
                                  filter(cdm_name == x) %>%
                                  mutate(cdm_name = NA)
                              ) 
                            
                          } ) %>%
  bind_rows() %>%
  rename(
    "Database" = "cdm_name",
    " " = "comparison_name",
    "Fine-Gray, sHR [95%CI]" = "finegray",
    "Cox, HR [95%CI]" = "cox"
  )


flextable_to_rmd(
  estimates_table %>%
    #as_grouped_data(groups = c("Database")) %>%
    flextable() %>%
    separate_header() %>%
    # vline(border = border, part = "body", i = c(2:5, 7:10, 12:15, 17:20)) %>%
    set_table_properties(width = 1, layout = "autofit") %>%
    bold(part = "header") %>%
    bold(j = 1, part = "body") %>%
    bg(i = c(1,6, 11, 16), bg = "#ededed") %>%
   #bg(j = seq(2, ncol(estimates_table), 2), bg = "#ededed") %>%
    fontsize(size = 9, part = "header") %>%
    fontsize(size = 8, part = "body")  %>%
    padding(padding = 1, part = "all") %>%
    align(align = "center", part = "header") %>%
    align(align = "center", part = "body")
)

cat("\n\n\\pagebreak\n")
num_tab <- num_tab + 1
```

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE, results='asis'}
####  OW
ps_hist <- ps_distribution %>%
  inner_join(comparisons %>% 
               filter(exposure_name == "any vaccine vaccinated") %>% 
               filter(comparator_name == "any vaccine unvaccinated") %>%
               distinct(comparison_id, study)) %>%
  select(-comparison_id) %>%
  mutate(OW = if_else(group == "comparator", ps, 1-ps)) %>%
  group_by(OW, study, cdm_name) %>%
  mutate(N = sum(n)) %>%
  ungroup()

cat("##", paste0("**Figure S", num_fig, ": ", "Distribution of Propensity Scores** across databases and cohorts stratifying by exposure status (COVID-19 vaccinated vs. unvaccinated)."))

print(
ps_hist %>%
  mutate(cdm_name = factor(cdm_name, levels = c("AURUM", "GOLD", "SIDIAP", "CORIVA")),
         ps = cut(ps, breaks = seq(0,1,0.1), labels = seq(0,1,0.1)[-1], include.lowest = TRUE),
         group = factor(group, levels = c("exposure", "comparator"), labels = c("Vaccinated", "Unvaccinated")),
         study = paste0("Cohort ", study)
         ) %>%
  mutate(ps = as.numeric(ps)/10) %>%
  group_by(cdm_name, study) %>%
  mutate(total = sum(n)) %>%
  ungroup() %>%
  # filter(cdm_name == "AURUM" & study == 1)  %>%
  ggplot(aes(x = ps, y = n/total, col = group, fill = group))+
  geom_col() +
  facet_grid(rows = vars(cdm_name), cols = vars(study)) +
  scale_y_continuous(labels = scales::comma) +
  scale_x_continuous(breaks = seq(0,1,.25) , labels = nice(seq(0,1,.25),2)) +
  theme(legend.title = element_blank()) +
  xlab("Propensity score") +
  ylab("Normalised frequency")
)


cat("\n\n\\pagebreak\n")
num_fig <- num_fig + 1

```

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE, results='asis'}
cat("\n") 
cat("##",paste0("**Table S", num_tab, ": Fine-Gray and Cox estimates** for any COVID-19 vaccine effectiveness across databases and cohorts."))
cat("\n") 

####  OW
ps_hist <- ps_distribution %>%
  inner_join(comparisons %>% 
               filter(exposure_name == "any vaccine vaccinated") %>% 
               filter(comparator_name == "any vaccine unvaccinated") %>%
               distinct(comparison_id, study)) %>%
  select(-comparison_id) %>%
  mutate(OW = if_else(group == "comparator", ps, 1-ps)) %>%
  group_by(OW, study, cdm_name) %>%
  mutate(N = sum(n)) %>%
  ungroup()

cat("##", paste0("**Figure S", num_fig, ": ", "Distribution of Overlap Weights** across databases and cohorts stratifying by exposure status (COVID-19 vaccinated vs. unvaccinated)."))

print(
  ps_hist %>%
    mutate(cdm_name = factor(cdm_name, levels = c("AURUM", "GOLD", "SIDIAP", "CORIVA")),
           ow = cut(OW, breaks = seq(0,1,0.1), labels = seq(0,1,0.1)[-1], include.lowest = TRUE),
           group = factor(group, levels = c("exposure", "comparator"), labels = c("Vaccinated", "Unvaccinated")),
           study = paste0("Cohort ", study)
    ) %>%
    group_by(cdm_name, study) %>%
    mutate(total = sum(n)) %>%
    ungroup() %>%
    # filter(cdm_name == "AURUM" & study == 1)  %>%
    ggplot(aes(x = ow, y = n/total, col = group, fill = group))+
    geom_col() +
    facet_grid(rows = vars(cdm_name), cols = vars(study)) +
    scale_y_continuous(labels = scales::comma) +
    theme(legend.title = element_blank()) +
    xlab("Overlap Weights") +
    ylab("Normalised frequency")
)

cat(paste0("The Overlap Weights are derived from the propensity score (PS) and the exposure group (T). The formula is the following: OW(T=0) = PS, OW(T=1) = 1-PS, where T=1 indicated vaccinated and T=0 unvaccinated."))

cat("\n\n\\pagebreak\n")
num_fig <- num_fig + 1

```
